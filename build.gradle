buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
  }
}

plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
  id 'idea'

}

idea {
  project {
    languageLevel = '1.8'
  }
}

repositories {
  jcenter()
}

version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

def vertxVersion = '3.4.2'
def mainVerticleName = 'io.vertx.vendimia.verticles.UserVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'
def log4j = '1.7.25'

repositories {
  mavenCentral()
  jcenter()

  maven {
    credentials {
      username 'user'
      password 'Pr4lTnq4Zb6l'
    }
    url 'http://artifactory.concredito.com.mx/artifactory/libs-release'
  }
}

dependencies {
  compile(group: 'com.concredito.io.vertx.blueprint', name: 'microservice-lib-common', version: '3.4.2')

  compile "io.vertx:vertx-dependencies:$vertxVersion"
  compile "com.hazelcast:hazelcast:3.6.3"

  compile (group: 'io.vertx', name: 'vertx-core', version: "$vertxVersion")
  compile group: 'io.vertx', name: 'vertx-rx-java', version: "$vertxVersion"
  compile (group: 'io.vertx', name: 'vertx-codegen', version: "$vertxVersion")
  compile group: 'io.vertx', name: 'vertx-mongo-client', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-sockjs-service-proxy', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-service-proxy', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-service-proxy', version: "$vertxVersion"
  compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.9.1'
  compile group: 'io.vertx', name: 'vertx-circuit-breaker', version: "$vertxVersion"
  compile group: 'io.vertx', name :'vertx-service-discovery', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-hazelcast', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-lang-js', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-sockjs-service-proxy', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-service-proxy', version: "$vertxVersion"
  compile group: 'io.vertx', name: 'vertx-web', version: "$vertxVersion"

  compile group: 'com.google.guava', name: 'guava', version: '16.0.1'
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'


  compileOnly 'org.projectlombok:lombok:1.16.18'

  testCompile group: 'io.vertx', name: 'vertx-unit', version: "$vertxVersion"

  compile 'com.github.rworsnop:vertx-beans:1.4.0'


  testCompile "org.assertj:assertj-core:3.6.2"
  compile group: 'javax.inject', name: 'javax.inject', version: '1'


  testCompile "junit:junit:4.12"
  compile "org.apache.logging.log4j:log4j-core:$log4j"
  compile "org.apache.logging.log4j:log4j-api:$log4j"


  //testCompile "io.vertx:vertx-unit:*"
  //compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j"
  //compile "io.vertx:vertx-health-check:*"
  //compile "io.vertx:vertx-config:*"
  //compile "io.vertx:vertx-circuit-breaker:*"
  //compile "io.vertx:vertx-service-discovery:*"
  //compile "io.vertx:vertx-hazelcast:*"
  //compile "io.vertx:vertx-lang-js:*"
  //compile "io.vertx:vertx-sockjs-service-proxy:*"
  //compile "io.vertx:vertx-service-proxy:*"

  //compile "io.vertx:vertx-rx-java:*"
  //compile "io.vertx:vertx-web:*"

  compile "org.slf4j:slf4j-api:1.7.22"
  compile "biz.paluch.logging:logstash-gelf:1.11.0"


  testCompile "com.jayway.awaitility:awaitility:1.7.0"
  testCompile "io.rest-assured:rest-assured:3.0.2"
  compile "org.apache.commons:commons-lang3:3.5"

  testCompile group: 'junit', name: 'junit', version: '4.12'
}

shadowJar {
  classifier = 'fat'
  manifest {
      attributes "Main-Verticle": mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}
task annotationProcessing(type: JavaCompile, group: 'build') { // codegen
  source = sourceSets.main.java
  classpath = configurations.compile + configurations.compileOnly
  destinationDir = project.file('src/main/generated')
  options.compilerArgs = [
    "-proc:only",
    "-processor", "io.vertx.codegen.CodeGenProcessor",
    "-AoutputDirectory=/src/main"
  ]
}

compileJava {
  targetCompatibility = 1.8
  sourceCompatibility = 1.8

  dependsOn annotationProcessing
}

sourceSets {
  main {
    java {
      srcDirs += 'src/main/generated'
    }
  }
}

/*
task generateServiceProxy(type: JavaCompile, description: 'Generates EBServiceProxies') {
  source = sourceSets.main.java
  classpath = configurations.compile
  destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
  options.compilerArgs = [
    "-proc:only",
    "-processor", "io.vertx.codegen.CodeGenProcessor",
    "-AoutputDirectory=$destinationDir"
  ]
}


compileJava {
  source sourceSets.main.java + sourceSets.generated.java
}
compileJava.dependsOn generateServiceProxy

*/
run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.0'
}
